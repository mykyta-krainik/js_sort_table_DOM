{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","addEventListener","e","columnHeader","target","tHead","contains","columnIndex","cellIndex","sortedRows","tBodies","rows","sort","rowA","rowB","rowAData","cells","innerText","rowBData","startsWith","slice","replaceAll","isNaN","localeCompare","append"],"mappings":";AAAA,aAIA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAFA,IAAMA,EAAQC,SAASC,cAAc,SAErCF,EAAMG,iBAAiB,QAAS,SAASC,GAAG,IAAA,EACpCC,EAAeD,EAAEE,OAEnB,GAACN,EAAMO,MAAMC,SAASH,GAAtB,CAIEI,IAAAA,EAAcJ,EAAaK,UAC3BC,EAAa,EAAIX,EAAMY,QAAQ,GAAGC,MACrCC,KAAK,SAACC,EAAMC,GACPC,IAAAA,EAAWF,EAAKG,MAAMT,GAAaU,UACnCC,EAAWJ,EAAKE,MAAMT,GAAaU,UAEnCF,GAAAA,EAASI,WAAW,KACtBJ,EAAWA,EAASK,MAAM,GAAGC,WAAW,IAAK,IAC7CH,EAAWA,EAASE,MAAM,GAAGC,WAAW,IAAK,SACxC,GAAIC,OAAOP,GACTA,OAAAA,EAASQ,cAAcL,GAGzB,OAACH,GAAYG,KAGxBpB,EAAAA,EAAMY,QAAQ,IAAGc,OAAUf,MAAAA,EAAAA,EAAAA","file":"main.ad3d1197.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', function(e) {\n  const columnHeader = e.target;\n\n  if (!table.tHead.contains(columnHeader)) {\n    return;\n  }\n\n  const columnIndex = columnHeader.cellIndex;\n  const sortedRows = [...table.tBodies[0].rows]\n    .sort((rowA, rowB) => {\n      let rowAData = rowA.cells[columnIndex].innerText;\n      let rowBData = rowB.cells[columnIndex].innerText;\n\n      if (rowAData.startsWith('$')) {\n        rowAData = rowAData.slice(1).replaceAll(',', '');\n        rowBData = rowBData.slice(1).replaceAll(',', '');\n      } else if (isNaN(+rowAData)) {\n        return rowAData.localeCompare(rowBData);\n      }\n\n      return +rowAData - +rowBData;\n    });\n\n  table.tBodies[0].append(...sortedRows);\n});\n"]}